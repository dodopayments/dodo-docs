{
  "openapi": "3.0.3",
  "info": {
    "title": "public",
    "description": "",
    "license": {
      "name": ""
    },
    "version": "0.4.0"
  },
  "servers": [
    {
      "url": "https://live.dodopayments.com/",
      "description": "Live Mode Server Host"
    },
    {
      "url": "https://test.dodopayments.com/",
      "description": "Test Mode Server Host"
    }
  ],
  "paths": {
    "/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "list_customers",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "Page size default is 10 max is 100",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "Page number default is 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customers List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCustomersListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      }
    },
    "/customers/{customer_id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "get_customer",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      }
    },
    "/disputes": {
      "get": {
        "tags": [
          "Disputes"
        ],
        "operationId": "list_disputes",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "Page size default is 10 max is 100",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "Page number default is 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDisputesListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      }
    },
    "/disputes/{dispute_id}": {
      "get": {
        "tags": [
          "Disputes"
        ],
        "operationId": "get_dispute_handler",
        "parameters": [
          {
            "name": "dispute_id",
            "in": "path",
            "description": "Dispute Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisputeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      }
    },
    "/payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "operationId": "list_payments",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "Page size default is 10 max is 100",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "Page number default is 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentsListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      },
      "post": {
        "tags": [
          "Payments"
        ],
        "operationId": "create_one_time_payment_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOneTimePaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "One Time payment successfully initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOneTimePaymentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      }
    },
    "/payments/{payment_id}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "operationId": "get_payment_handler",
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "description": "Payment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      }
    },
    "/payouts": {
      "get": {
        "tags": [
          "Payouts"
        ],
        "operationId": "list_payouts",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "Page size default is 10 max is 100",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "Page number default is 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payouts List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPayoutsResponseList"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "list_products",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "Page size default is 10 max is 100",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "Page number default is 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductsListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      },
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "create_product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product Created Succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "get_product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Products"
        ],
        "operationId": "patch_product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchProductRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product Updated Succesfully"
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      }
    },
    "/products/{id}/images": {
      "put": {
        "tags": [
          "Products"
        ],
        "operationId": "update_product_image",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aws s3 presigned URL. Upload image to this URL withing 60s",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProductImageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      }
    },
    "/refunds": {
      "get": {
        "tags": [
          "Refunds"
        ],
        "operationId": "list_refunds",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "Page size default is 10 max is 100",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "Page number default is 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRefundsListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      },
      "post": {
        "tags": [
          "Refunds"
        ],
        "operationId": "create_refund",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRefundRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Refund successfully initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      }
    },
    "/refunds/{refund_id}": {
      "get": {
        "tags": [
          "Refunds"
        ],
        "operationId": "get_refund_handler",
        "parameters": [
          {
            "name": "refund_id",
            "in": "path",
            "description": "Refund Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      }
    },
    "/subscriptions": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "create_subscription_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Subscription successfully initiated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSubscriptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      }
    },
    "/subscriptions/{subscription_id}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "get_subscription_handler",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "description": "Subscription Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "patch_subscription",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "description": "Subscription Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchSubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Subscription successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchSubscriptionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API_KEY": []
          }
        ]
      }
    },
    "/your-webhook-url": {
      "post": {
        "tags": [
          "Outgoing Webhooks"
        ],
        "operationId": "dummy_handler_for_outgoing_webhook_docs",
        "parameters": [
          {
            "name": "webhook-id",
            "in": "header",
            "description": "Unique identifier for the webhook",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webhook-signature",
            "in": "header",
            "description": "Signature of the Webhook",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webhook-timestamp",
            "in": "header",
            "description": "Unix timestamp when the webhook was sent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutgoingWebhook"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Webhook processed successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Invalid webhook signature"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BillingAddress": {
        "type": "object",
        "required": [
          "country",
          "state",
          "city",
          "street",
          "zipcode"
        ],
        "properties": {
          "city": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/CountryCodeAlpha2"
          },
          "state": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "zipcode": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CountryCodeAlpha2": {
        "type": "string",
        "description": "ISO country code alpha2 variant",
        "enum": [
          "AF",
          "AX",
          "AL",
          "DZ",
          "AS",
          "AD",
          "AO",
          "AI",
          "AQ",
          "AG",
          "AR",
          "AM",
          "AW",
          "AU",
          "AT",
          "AZ",
          "BS",
          "BH",
          "BD",
          "BB",
          "BY",
          "BE",
          "BZ",
          "BJ",
          "BM",
          "BT",
          "BO",
          "BQ",
          "BA",
          "BW",
          "BV",
          "BR",
          "IO",
          "BN",
          "BG",
          "BF",
          "BI",
          "KH",
          "CM",
          "CA",
          "CV",
          "KY",
          "CF",
          "TD",
          "CL",
          "CN",
          "CX",
          "CC",
          "CO",
          "KM",
          "CG",
          "CD",
          "CK",
          "CR",
          "CI",
          "HR",
          "CU",
          "CW",
          "CY",
          "CZ",
          "DK",
          "DJ",
          "DM",
          "DO",
          "EC",
          "EG",
          "SV",
          "GQ",
          "ER",
          "EE",
          "ET",
          "FK",
          "FO",
          "FJ",
          "FI",
          "FR",
          "GF",
          "PF",
          "TF",
          "GA",
          "GM",
          "GE",
          "DE",
          "GH",
          "GI",
          "GR",
          "GL",
          "GD",
          "GP",
          "GU",
          "GT",
          "GG",
          "GN",
          "GW",
          "GY",
          "HT",
          "HM",
          "VA",
          "HN",
          "HK",
          "HU",
          "IS",
          "IN",
          "ID",
          "IR",
          "IQ",
          "IE",
          "IM",
          "IL",
          "IT",
          "JM",
          "JP",
          "JE",
          "JO",
          "KZ",
          "KE",
          "KI",
          "KP",
          "KR",
          "KW",
          "KG",
          "LA",
          "LV",
          "LB",
          "LS",
          "LR",
          "LY",
          "LI",
          "LT",
          "LU",
          "MO",
          "MK",
          "MG",
          "MW",
          "MY",
          "MV",
          "ML",
          "MT",
          "MH",
          "MQ",
          "MR",
          "MU",
          "YT",
          "MX",
          "FM",
          "MD",
          "MC",
          "MN",
          "ME",
          "MS",
          "MA",
          "MZ",
          "MM",
          "NA",
          "NR",
          "NP",
          "NL",
          "NC",
          "NZ",
          "NI",
          "NE",
          "NG",
          "NU",
          "NF",
          "MP",
          "NO",
          "OM",
          "PK",
          "PW",
          "PS",
          "PA",
          "PG",
          "PY",
          "PE",
          "PH",
          "PN",
          "PL",
          "PT",
          "PR",
          "QA",
          "RE",
          "RO",
          "RU",
          "RW",
          "BL",
          "SH",
          "KN",
          "LC",
          "MF",
          "PM",
          "VC",
          "WS",
          "SM",
          "ST",
          "SA",
          "SN",
          "RS",
          "SC",
          "SL",
          "SG",
          "SX",
          "SK",
          "SI",
          "SB",
          "SO",
          "ZA",
          "GS",
          "SS",
          "ES",
          "LK",
          "SD",
          "SR",
          "SJ",
          "SZ",
          "SE",
          "CH",
          "SY",
          "TW",
          "TJ",
          "TZ",
          "TH",
          "TL",
          "TG",
          "TK",
          "TO",
          "TT",
          "TN",
          "TR",
          "TM",
          "TC",
          "TV",
          "UG",
          "UA",
          "AE",
          "GB",
          "UM",
          "US",
          "UY",
          "UZ",
          "VU",
          "VE",
          "VN",
          "VG",
          "VI",
          "WF",
          "EH",
          "YE",
          "ZM",
          "ZW"
        ]
      },
      "CreateOneTimePaymentRequest": {
        "type": "object",
        "required": [
          "product_cart",
          "customer",
          "billing"
        ],
        "properties": {
          "billing": {
            "$ref": "#/components/schemas/BillingAddress"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerRequest"
          },
          "payment_link": {
            "type": "boolean",
            "nullable": true
          },
          "product_cart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OneTimeProductCartItem"
            }
          },
          "return_url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateOneTimePaymentResponse": {
        "type": "object",
        "required": [
          "payment_id",
          "total_price",
          "client_secret",
          "customer"
        ],
        "properties": {
          "client_secret": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerLimitedDetailsResponse"
          },
          "payment_id": {
            "type": "string"
          },
          "payment_link": {
            "type": "string",
            "nullable": true
          },
          "total_price": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "CreateProductRequest": {
        "type": "object",
        "required": [
          "tax_category",
          "price"
        ],
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "tax_category": {
            "$ref": "#/components/schemas/TaxCategory"
          }
        }
      },
      "CreateProductResponse": {
        "type": "object",
        "required": [
          "product_id"
        ],
        "properties": {
          "product_id": {
            "type": "string"
          }
        }
      },
      "CreateRefundRequest": {
        "type": "object",
        "required": [
          "payment_id"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "payment_id": {
            "type": "string"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateSubscriptionRequest": {
        "type": "object",
        "required": [
          "product_id",
          "quantity",
          "customer",
          "billing"
        ],
        "properties": {
          "billing": {
            "$ref": "#/components/schemas/BillingAddress"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerRequest"
          },
          "payment_link": {
            "type": "boolean",
            "nullable": true
          },
          "product_id": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "return_url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateSubscriptionResponse": {
        "type": "object",
        "required": [
          "subscription_id",
          "recurring_price",
          "customer"
        ],
        "properties": {
          "client_secret": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerLimitedDetailsResponse"
          },
          "payment_link": {
            "type": "string",
            "nullable": true
          },
          "recurring_price": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "subscription_id": {
            "type": "string"
          }
        }
      },
      "Currency": {
        "type": "string",
        "enum": [
          "AED",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BWP",
          "BYN",
          "BZD",
          "CAD",
          "CHF",
          "CLP",
          "CNY",
          "COP",
          "CRC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EGP",
          "ETB",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GEL",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "INR",
          "IQD",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRU",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SEK",
          "SGD",
          "SHP",
          "SLE",
          "SLL",
          "SOS",
          "SRD",
          "SSP",
          "STN",
          "SVC",
          "SZL",
          "THB",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VES",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XCD",
          "XOF",
          "XPF",
          "YER",
          "ZAR",
          "ZMW"
        ]
      },
      "CustomerLimitedDetailsResponse": {
        "type": "object",
        "required": [
          "customer_id",
          "name",
          "email"
        ],
        "properties": {
          "customer_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CustomerRequest": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phone_number": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CustomerResponse": {
        "type": "object",
        "required": [
          "customer_id",
          "business_id",
          "name",
          "email",
          "created_at"
        ],
        "properties": {
          "business_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phone_number": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DisputeResponse": {
        "type": "object",
        "required": [
          "dispute_id",
          "payment_id",
          "business_id",
          "amount",
          "currency",
          "dispute_status",
          "dispute_stage",
          "created_at"
        ],
        "properties": {
          "amount": {
            "type": "string"
          },
          "business_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string"
          },
          "dispute_id": {
            "type": "string"
          },
          "dispute_stage": {
            "$ref": "#/components/schemas/DisputeStage"
          },
          "dispute_status": {
            "$ref": "#/components/schemas/DisputeStatus"
          },
          "payment_id": {
            "type": "string"
          }
        }
      },
      "DisputeStage": {
        "type": "string",
        "enum": [
          "pre_dispute",
          "dispute",
          "pre_arbitration"
        ]
      },
      "DisputeStatus": {
        "type": "string",
        "enum": [
          "dispute_opened",
          "dispute_expired",
          "dispute_accepted",
          "dispute_cancelled",
          "dispute_challenged",
          "dispute_won",
          "dispute_lost"
        ]
      },
      "EventType": {
        "type": "string",
        "description": "Event types for Dodo events",
        "enum": [
            "payment.succeeded",
            "payment.failed",
            "payment.processing",
            "payment.cancelled",
            "refund.succeeded",
            "refund.failed",
            "dispute.opened",
            "dispute.expired",
            "dispute.accepted",
            "dispute.cancelled",
            "dispute.challenged",
            "dispute.won",
            "dispute.lost",
            "subscription.active",
            "subscription.on_hold",
            "subscription.paused",
            "subscription.cancelled",
            "subscription.failed",
            "subscription.expired",
            "invalid"
        ]
      },
      "GetCustomersListResponse": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerResponse"
            }
          }
        }
      },
      "GetDisputesListResponse": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisputeResponse"
            }
          }
        }
      },
      "GetPaymentsListResponse": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetPaymentsListResponseItem"
            }
          }
        }
      },
      "GetPaymentsListResponseItem": {
        "type": "object",
        "required": [
          "payment_id",
          "total_amount",
          "currency",
          "customer",
          "created_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerLimitedDetailsResponse"
          },
          "payment_id": {
            "type": "string"
          },
          "payment_method": {
            "type": "string",
            "nullable": true
          },
          "payment_method_type": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntentStatus"
              }
            ],
            "nullable": true
          },
          "subscription_id": {
            "type": "string",
            "nullable": true
          },
          "total_amount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetPayoutsResponseList": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayoutsResponse"
            }
          }
        }
      },
      "GetProductResponse": {
        "type": "object",
        "required": [
          "product_id",
          "business_id",
          "created_at",
          "updated_at",
          "is_recurring",
          "tax_category",
          "price"
        ],
        "properties": {
          "business_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "is_recurring": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "product_id": {
            "type": "string"
          },
          "tax_category": {
            "$ref": "#/components/schemas/TaxCategory"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GetProductsListResponse": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetProductsListResponseItem"
            }
          }
        }
      },
      "GetProductsListResponseItem": {
        "type": "object",
        "required": [
          "product_id",
          "business_id",
          "created_at",
          "updated_at",
          "is_recurring",
          "tax_category"
        ],
        "properties": {
          "business_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "is_recurring": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "product_id": {
            "type": "string"
          },
          "tax_category": {
            "$ref": "#/components/schemas/TaxCategory"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GetRefundsListResponse": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundResponse"
            }
          }
        }
      },
      "IntentStatus": {
        "type": "string",
        "enum": [
          "succeeded",
          "failed",
          "cancelled",
          "processing",
          "requires_customer_action",
          "requires_merchant_action",
          "requires_payment_method",
          "requires_confirmation",
          "requires_capture",
          "partially_captured",
          "partially_captured_and_capturable"
        ]
      },
      "OneTimePrice": {
        "type": "object",
        "required": [
          "price",
          "currency",
          "discount",
          "purchasing_power_parity"
        ],
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "discount": {
            "type": "number",
            "format": "float"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "purchasing_power_parity": {
            "type": "boolean"
          }
        }
      },
      "OneTimeProductCartItem": {
        "type": "object",
        "required": [
          "product_id",
          "quantity"
        ],
        "properties": {
          "product_id": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "OutgoingWebhook": {
        "type": "object",
        "required": [
          "business_id",
          "type",
          "timestamp",
          "data"
        ],
        "properties": {
          "business_id": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/OutgoingWebhookData"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp of when the event occurred (not necessarily the same of when it was delivered)"
          },
          "type": {
            "$ref": "#/components/schemas/EventType"
          }
        }
      },
      "OutgoingWebhookData": {
        "oneOf": [
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentResponse"
              },
              {
                "type": "object",
                "required": [
                  "payload_type"
                ],
                "properties": {
                  "payload_type": {
                    "type": "string",
                    "enum": [
                      "Payment"
                    ]
                  }
                }
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/RefundResponse"
              },
              {
                "type": "object",
                "required": [
                  "payload_type"
                ],
                "properties": {
                  "payload_type": {
                    "type": "string",
                    "enum": [
                      "Refund"
                    ]
                  }
                }
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/DisputeResponse"
              },
              {
                "type": "object",
                "required": [
                  "payload_type"
                ],
                "properties": {
                  "payload_type": {
                    "type": "string",
                    "enum": [
                      "Dispute"
                    ]
                  }
                }
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionResponse"
              },
              {
                "type": "object",
                "required": [
                  "payload_type"
                ],
                "properties": {
                  "payload_type": {
                    "type": "string",
                    "enum": [
                      "Subscription"
                    ]
                  }
                }
              }
            ]
          }
        ],
        "discriminator": {
          "propertyName": "payload_type"
        }
      },
      "PatchProductRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Price"
              }
            ],
            "nullable": true
          },
          "tax_category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxCategory"
              }
            ],
            "nullable": true
          }
        }
      },
      "PatchSubscriptionRequest": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "$ref": "#/components/schemas/SubscriptionStatus"
          }
        }
      },
      "PatchSubscriptionResponse": {
        "type": "object",
        "required": [
          "subscription_id",
          "status"
        ],
        "properties": {
          "status": {
            "$ref": "#/components/schemas/SubscriptionStatus"
          },
          "subscription_id": {
            "type": "string"
          }
        }
      },
      "PaymentResponse": {
        "type": "object",
        "required": [
          "payment_id",
          "business_id",
          "total_amount",
          "currency",
          "created_at",
          "disputes",
          "refunds",
          "customer"
        ],
        "properties": {
          "business_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerLimitedDetailsResponse"
          },
          "disputes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisputeResponse"
            }
          },
          "payment_id": {
            "type": "string"
          },
          "payment_method": {
            "type": "string",
            "nullable": true
          },
          "payment_method_type": {
            "type": "string",
            "nullable": true
          },
          "refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundResponse"
            }
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntentStatus"
              }
            ],
            "nullable": true
          },
          "subscription_id": {
            "type": "string",
            "nullable": true
          },
          "total_amount": {
            "type": "integer",
            "format": "int32"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "PayoutStatus": {
        "type": "string",
        "enum": [
          "in_progress",
          "failed",
          "success"
        ]
      },
      "PayoutsResponse": {
        "type": "object",
        "required": [
          "payout_id",
          "business_id",
          "payment_method",
          "status",
          "fee",
          "tax",
          "amount",
          "created_at",
          "updated_at",
          "currency",
          "refunds",
          "chargebacks"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "business_id": {
            "type": "string"
          },
          "chargebacks": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "fee": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "payment_method": {
            "type": "string"
          },
          "payout_document_url": {
            "type": "string",
            "nullable": true
          },
          "payout_id": {
            "type": "string"
          },
          "refunds": {
            "type": "integer",
            "format": "int32"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/PayoutStatus"
          },
          "tax": {
            "type": "integer",
            "format": "int32"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Price": {
        "oneOf": [
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/OneTimePrice"
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "one_time_price"
                    ]
                  }
                }
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecurringPrice"
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "recurring_price"
                    ]
                  }
                }
              }
            ]
          }
        ],
        "discriminator": {
          "propertyName": "type"
        }
      },
      "RecurringPrice": {
        "type": "object",
        "required": [
          "price",
          "currency",
          "discount",
          "purchasing_power_parity",
          "payment_frequency_count",
          "payment_frequency_interval",
          "subscription_period_count",
          "subscription_period_interval",
          "trial_period_days"
        ],
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "discount": {
            "type": "number",
            "format": "float"
          },
          "payment_frequency_count": {
            "type": "integer",
            "format": "int32"
          },
          "payment_frequency_interval": {
            "$ref": "#/components/schemas/TimeInterval"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "purchasing_power_parity": {
            "type": "boolean"
          },
          "subscription_period_count": {
            "type": "integer",
            "format": "int32"
          },
          "subscription_period_interval": {
            "$ref": "#/components/schemas/TimeInterval"
          },
          "trial_period_days": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RefundResponse": {
        "type": "object",
        "required": [
          "refund_id",
          "payment_id",
          "business_id",
          "status",
          "created_at"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "business_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Currency"
              }
            ],
            "nullable": true
          },
          "payment_id": {
            "type": "string"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "refund_id": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/RefundStatus"
          }
        }
      },
      "RefundStatus": {
        "type": "string",
        "enum": [
          "succeeded",
          "failed",
          "pending",
          "review"
        ]
      },
      "SubscriptionResponse": {
        "type": "object",
        "required": [
          "subscription_id",
          "recurring_pre_tax_amount",
          "currency",
          "status",
          "customer_id",
          "created_at",
          "product_id",
          "quantity"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "customer_id": {
            "type": "string"
          },
          "product_id": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "recurring_pre_tax_amount": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionStatus"
          },
          "subscription_id": {
            "type": "string"
          }
        }
      },
      "SubscriptionStatus": {
        "type": "string",
        "enum": [
          "pending",
          "active",
          "on_hold",
          "paused",
          "cancelled",
          "failed",
          "expired"
        ]
      },
      "TaxCategory": {
        "type": "string",
        "description": "Represents the different categories of taxation applicable to various products and services.",
        "enum": [
          "digital_products",
          "saas"
        ]
      },
      "TimeInterval": {
        "type": "string",
        "enum": [
          "Day",
          "Week",
          "Month",
          "Year"
        ]
      },
      "UpdateProductImageResponse": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "API_KEY": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Products"
    },
    {
      "name": "Payments"
    },
    {
      "name": "Subscriptions"
    },
    {
      "name": "Customers"
    },
    {
      "name": "Refunds"
    },
    {
      "name": "Disputes"
    },
    {
      "name": "Outgoing Webhooks"
    }
  ]
}